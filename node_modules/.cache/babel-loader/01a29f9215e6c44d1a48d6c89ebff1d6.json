{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caleb\\\\JavaScript\\\\Rob\\\\Lessons\\\\src\\\\components\\\\Earthquakes.jsx\";\nimport React, { Component } from \"react\";\nimport Earthquake from \"./Earthquake\";\n\nclass Earthquakes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      days: null\n    };\n\n    this.fetchQuakes = async () => {\n      let response = await fetch(\"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson\");\n      let earthquakes = await response.json();\n      let oneDayMs = 24 * 60 * 60 * 1000; // One day in MS\n\n      let now = Date.now();\n      let days = [];\n      earthquakes.features.forEach(earthquake => {\n        let delta = now - earthquake.properties.time;\n        let day = Math.trunc(delta / oneDayMs);\n        days[day] = days[day] || [];\n        days[day].push(earthquake);\n      });\n      this.setState({\n        days: days\n      });\n    };\n  }\n\n  async componentDidMount() {\n    setInterval(this.fetchQuakes, 1000);\n  }\n\n  render() {\n    let days = this.state.days;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, days && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, days.map((day, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Days Ago: \", index, day.map(feature => React.createElement(Earthquake, {\n      data: feature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Earthquakes;","map":{"version":3,"sources":["C:\\Users\\caleb\\JavaScript\\Rob\\Lessons\\src\\components\\Earthquakes.jsx"],"names":["React","Component","Earthquake","Earthquakes","state","days","fetchQuakes","response","fetch","earthquakes","json","oneDayMs","now","Date","features","forEach","earthquake","delta","properties","time","day","Math","trunc","push","setState","componentDidMount","setInterval","render","map","index","feature"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCG,KADkC,GAC1B;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAD0B;;AAAA,SAGlCC,WAHkC,GAGpB,YAAY;AACxB,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,6EADwB,CAA1B;AAGA,UAAIC,WAAW,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAxB;AAEA,UAAIC,QAAQ,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAA9B,CANwB,CAMY;;AACpC,UAAIC,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAV;AAEA,UAAIP,IAAI,GAAG,EAAX;AACAI,MAAAA,WAAW,CAACK,QAAZ,CAAqBC,OAArB,CAA6BC,UAAU,IAAI;AACzC,YAAIC,KAAK,GAAGL,GAAG,GAAGI,UAAU,CAACE,UAAX,CAAsBC,IAAxC;AACA,YAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAK,GAAGN,QAAnB,CAAV;AAEAN,QAAAA,IAAI,CAACe,GAAD,CAAJ,GAAYf,IAAI,CAACe,GAAD,CAAJ,IAAa,EAAzB;AACAf,QAAAA,IAAI,CAACe,GAAD,CAAJ,CAAUG,IAAV,CAAeP,UAAf;AACD,OAND;AAOA,WAAKQ,QAAL,CAAc;AAAEnB,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACD,KArBiC;AAAA;;AAuBlC,QAAMoB,iBAAN,GAA0B;AACxBC,IAAAA,WAAW,CAAC,KAAKpB,WAAN,EAAmB,IAAnB,CAAX;AACD;;AAEDqB,EAAAA,MAAM,GAAG;AAAA,QACDtB,IADC,GACQ,KAAKD,KADb,CACDC,IADC;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACuB,GAAL,CAAS,CAACR,GAAD,EAAMS,KAAN,KACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaA,KADb,EAEGT,GAAG,CAACQ,GAAJ,CAAQE,OAAO,IACd,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADD,CADH,CADF,CAFJ,CADF;AAkBD;;AA/CiC;;AAkDpC,eAAe3B,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Earthquake from \"./Earthquake\";\r\n\r\nclass Earthquakes extends Component {\r\n  state = { days: null };\r\n\r\n  fetchQuakes = async () => {\r\n    let response = await fetch(\r\n      \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson\"\r\n    );\r\n    let earthquakes = await response.json();\r\n\r\n    let oneDayMs = 24 * 60 * 60 * 1000; // One day in MS\r\n    let now = Date.now();\r\n\r\n    let days = [];\r\n    earthquakes.features.forEach(earthquake => {\r\n      let delta = now - earthquake.properties.time;\r\n      let day = Math.trunc(delta / oneDayMs);\r\n\r\n      days[day] = days[day] || [];\r\n      days[day].push(earthquake);\r\n    });\r\n    this.setState({ days: days });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    setInterval(this.fetchQuakes, 1000);\r\n  }\r\n\r\n  render() {\r\n    let { days } = this.state;\r\n    return (\r\n      <div>\r\n        {days && (\r\n          <div>\r\n            <div>\r\n              {days.map((day, index) => (\r\n                <div>\r\n                  Days Ago: {index}\r\n                  {day.map(feature => (\r\n                    <Earthquake data={feature} />\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Earthquakes;\r\n"]},"metadata":{},"sourceType":"module"}